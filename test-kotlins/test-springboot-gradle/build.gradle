buildscript {
    project.ext.kotlin_version = '1.0.0'
    repositories {
        mavenCentral()
        maven { url "http://repo.spring.io/snapshot" }
        maven { url "http://repo.spring.io/milestone" }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.3.3.RELEASE")
    }
}

plugins {
    id "us.kirchmeier.capsule" version "1.0.2"
}

apply plugin: "kotlin"
apply plugin: 'application'
apply plugin: 'spring-boot'

repositories {
    maven {
        url "http://www.haoshuju.net:8078/"
    }
    maven { url "http://repo.spring.io/snapshot" }
    maven { url "http://repo.spring.io/milestone" }
    mavenCentral()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile("org.springframework.boot:spring-boot-starter-web:1.3.3.RELEASE")
    //compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    //compile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
}

sourceSets {
    main.kotlin.srcDirs += 'src/main/kotlin'
    main.java.srcDirs += 'src/main/java'
}

mainClassName = 'demo.MainKt'
defaultTasks 'run'

task fatCapsule(type: FatCapsule) {
    applicationClass project.mainClassName
}

task fatRun(type: Exec, dependsOn: 'fatCapsule') {
    workingDir "./build/libs"

    commandLine "java", "-jar", "${project.name}-capsule.jar"

    //store the output instead of printing to the console:
    //standardOutput = new ByteArrayOutputStream()

    //extension method stopTomcat.output() can be used to obtain the output:
    //ext.output = {
    //    return standardOutput.toString()
    //}
}
