worker_processes  4;          # 表示工作进程的数量，一般设置为cpu的核数
error_log logs/error.log;

events {
    worker_connections 10240; # 表示每个工作进程的最大连接数
}

http {
    server {              # 块定义了虚拟主机
        listen 3000;      # 监听端口
        # server_name localhost;    # 监听域名
        location / {      # 匹配任何查询，因为所有请求都以 / 开头
            # root         # 指定对应uri的资源查找路径，这里html为相对路径，完整路径为
                          # /opt/nginx-1.7.7/html/
            # index       # 指定首页index文件的名称，可以配置多个，以空格分开。如有多
                          # 个，按配置顺序查找。

            default_type text/html;
            content_by_lua_file "hello.lua";
        }

        location = / {
            default_type text/html;
            return 200 '<h1>首页</h1><pre> location = /</pre>精确匹配
            <pre>
                location = /uri	= 表示精确匹配，只有完全匹配上才能生效
                location ^~ /uri	^~ 开头对URL路径进行前缀匹配，并且在正则之前。
                location ~ pattern	开头表示区分大小写的正则匹配
                location ~* pattern	开头表示不区分大小写的正则匹配
                location /uri	不带任何修饰符，也表示前缀匹配，但是在正则匹配之后
                location /	通用匹配，任何未匹配到其它location的请求都会匹配到，相当于switch中的default
            </pre>
            ';
        }

        location = /nginx.conf {
            root conf;
        }

        location /conf {
            alias conf/;
        }

        location = /login {
            return 200 "location = /login";
        }

        location ^~ /users {
            return 200 "location ^~/users";
        }

        location ~ /orders {
            return 200 "location ~ /orders";
        }
    }
}
