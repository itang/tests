// Generated by BUCKLESCRIPT VERSION 1.8.1, PLEASE EDIT WITH CARE
'use strict';

var X          = require("x");
var U          = require("y");
var Z          = require("z");
var Fs         = require("fs");
var Path       = require("path");
var Pervasives = require("bs-platform/lib/js/pervasives.js");

console.log("Hello, BuckleScript");

function f2() {
  return /* tuple */[
          new (global.Buffer)(20),
          Z.a0.a1.a2.hi,
          a0.a1.a2.ho,
          Math.imul(1, 2)
        ];
}

var date = new Date();

var f = X.add(3, 4);

var g = U.add2(3, 4);

document.getElementById("xx");

function test(arr) {
  return arr.map((function (x) {
                  return x + 1 | 0;
                })).forEach((function (x) {
                console.log(x);
                return /* () */0;
              }));
}

var a = new Int32Array(100);

a[0] = 100;

var a$1 = new TextArea();

a$1.name = "yourname";

console.log(a$1.name);

Path.join("a", "b");

Fs.readFileSync("xx.txt", "ascii");

test_int_type(3);

var v = add(1, 2);

console.log(add(3.0, 2.0));

console.log(add("x", "y"));

process.on("exit", (function (exit_code) {
        console.log("error code: " + Pervasives.string_of_int(exit_code));
        return /* () */0;
      }));

function register(p) {
  p.on("exit", (function (i) {
          console.log(i);
          return /* () */0;
        }));
  return /* () */0;
}

var config = {
  stdio: "inherit",
  cwd: "."
};

exports.f2       = f2;
exports.date     = date;
exports.f        = f;
exports.g        = g;
exports.test     = test;
exports.v        = v;
exports.register = register;
exports.config   = config;
/*  Not a pure module */
