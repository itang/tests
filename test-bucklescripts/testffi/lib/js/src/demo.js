// Generated by BUCKLESCRIPT VERSION 1.8.1, PLEASE EDIT WITH CARE
'use strict';

var X          = require("x");
var U          = require("y");
var Z          = require("z");
var Fs         = require("fs");
var Path       = require("path");
var Curry      = require("bs-platform/lib/js/curry.js");
var Pervasives = require("bs-platform/lib/js/pervasives.js");

console.log("Hello, BuckleScript");

function f2() {
  return /* tuple */[
          new (global.Buffer)(20),
          Z.a0.a1.a2.hi,
          a0.a1.a2.ho,
          Math.imul(1, 2)
        ];
}

var date = new Date();

var f = X.add(3, 4);

var g = U.add2(3, 4);

document.getElementById("xx");

function test(arr) {
  return arr.map((function (x) {
                  return x + 1 | 0;
                })).forEach((function (x) {
                console.log(x);
                return /* () */0;
              }));
}

var a = new Int32Array(100);

a[0] = 100;

var a$1 = new TextArea();

a$1.name = "yourname";

console.log(a$1.name);

Path.join("a", "b");

Fs.readFileSync("xx.txt", "ascii");

test_int_type(3);

var v = add(1, 2);

console.log(add(3.0, 2.0));

console.log(add("x", "y"));

process.on("exit", (function (exit_code) {
        console.log("error code: " + Pervasives.string_of_int(exit_code));
        return /* () */0;
      }));

function register(p) {
  p.on("exit", (function (i) {
          console.log(i);
          return /* () */0;
        }));
  return /* () */0;
}

var config = {
  stdio: "inherit",
  cwd: "."
};

new Date().xx(204, 3, true, false, ("你好"), (["你好", 1,2,3]), ( [{ "arr" : ["你好",1,2,3], "encoding" : "utf8"}] ), ( [{ "arr" : ["你好",1,2,3], "encoding" : "utf8"}] ), "xxx", 0, "yyy", "b", 1, 2, 3, 4, 5);

var dirname = typeof (__dirname) === "undefined" ? undefined : (__dirname);

var filename = typeof (__filename) === "undefined" ? undefined : (__filename);

var _module = typeof (module) === "undefined" ? undefined : (module);

var $$require = typeof (require) === "undefined" ? undefined : (require);

/* int array */[
    1,
    2,
    3
  ].map2((function (x) {
        return x + 1 | 0;
      }));

/* int array */[
    1,
    2,
    3
  ].map3((function (x) {
        return x + 1 | 0;
      }));

function app(f, x) {
  return f(x);
}

function app2(f, x) {
  return Curry._1(f, x);
}

new Date().onload = (function (v) {
    var o = this ;
    console.log(o.response + v | 0);
    return /* () */0;
  });

var u = {
  x: {
    y: {
      z: 3
    }
  }
};

var dirname$1 = dirname === undefined ? /* None */0 : [dirname];

var filename$1 = filename === undefined ? /* None */0 : [filename];

var _module$1 = _module === undefined ? /* None */0 : [_module];

var $$require$1 = $$require === undefined ? /* None */0 : [$$require];

exports.f2        = f2;
exports.date      = date;
exports.f         = f;
exports.g         = g;
exports.test      = test;
exports.v         = v;
exports.register  = register;
exports.config    = config;
exports.dirname   = dirname$1;
exports.filename  = filename$1;
exports._module   = _module$1;
exports.$$require = $$require$1;
exports.app       = app;
exports.app2      = app2;
exports.u         = u;
/*  Not a pure module */
